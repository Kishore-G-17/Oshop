{"version":3,"sources":["./src/app/admin/admin-orders/admin-orders.component.ts","./src/app/admin/admin-orders/admin-orders.component.html","./src/app/auth-guard.service.ts","./src/app/bs-navbar/bs-navbar.component.ts","./src/app/bs-navbar/bs-navbar.component.html","./src/app/services/users.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/common/Pipes/DeleteProduct.pipe.ts","./src/app/services/product.service.ts","./src/app/Product/product-card/product-card.component.ts","./src/app/Product/product-card/product-card.component.html","./src/app/order-success/order-success.component.ts","./src/app/order-success/order-success.component.html","./src/app/common/Pipes/Quantity.pipe.ts","./src/app/services/admin-auth-guard.service.ts","./src/app/Product/product-filter/product-filter.component.html","./src/app/Product/product-filter/product-filter.component.ts","./src/app/manage-orders/manage-orders.component.html","./src/app/manage-orders/manage-orders.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/product-form/product-form.component.ts","./src/app/admin/product-form/product-form.component.html","./src/app/product-quantity/product-quantity.component.ts","./src/app/product-quantity/product-quantity.component.html","./src/app/app.module.ts","./src/app/shopping-cart.service.ts","./src/app/services/category.service.ts","./src/app/common/Pipes/TotalCartQuantity.pipe.ts","./src/app/shopping-cart/shopping-cart.component.html","./src/app/shopping-cart/shopping-cart.component.ts","./src/app/order-summary/order-summary.component.html","./src/app/order-summary/order-summary.component.ts","./src/app/services/order.service.ts","./src/app/services/auth.service.ts","./src/app/admin/admin-products/admin-products.component.html","./src/app/admin/admin-products/admin-products.component.ts","./src/app/common/Pipes/getTotalPrice.pipe.ts","./src/app/check-out/check-out.component.ts","./src/app/check-out/check-out.component.html","./src/app/my-orders/my-orders.component.html","./src/app/my-orders/my-orders.component.ts","./src/app/models/order.class.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-orders',\n  templateUrl: './admin-orders.component.html',\n  styleUrls: ['./admin-orders.component.css']\n})\nexport class AdminOrdersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-orders works!</p>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private service: AuthService, private router: Router) { }\n\n  canActivate(route: any, state: RouterStateSnapshot){\n    return this.service.user$.map( user =>{\n      if(user){\n        return true;        \n      }      \n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n      return false;\n    });\n  }\n}","import { UserService } from './../services/users.service';\nimport { AuthService } from './../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AppUser } from '../models/app-user';\nimport { ShoppingCartService } from '../shopping-cart.service';\nimport 'rxjs/add/operator/take';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'bs-navbar',\n  templateUrl: './bs-navbar.component.html',\n  styleUrls: ['./bs-navbar.component.css']\n})\n\nexport class BsNavbarComponent implements OnInit{\n    \n  appUser!: AppUser | null;\n  isCollapsed : boolean = true;\n\n  constructor(public authService: AuthService, \n              private usersService: UserService,\n              private cartService: ShoppingCartService) {    \n  }\n\n  ngOnInit(){  \n    this.usersService.getAppUser$().subscribe( appUser=> this.appUser = appUser);\n  }\n\n  logout(){\n    this.authService.logout();\n  }\n\n}","<nav class=\"navbar navbar-expand-md navbar-light bg-light sticky-top\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Oshop</a>\n    <button class=\"navbar-toggler d-lg-none\" type=\"button\" (click)=\"isCollapsed = !isCollapsed\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" [ngbCollapse]=\"isCollapsed\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/shopping-cart\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-cart\" viewBox=\"0 0 16 16\">\n            <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n          </svg>\n          <span class=\"badge badge-warning badge-pill\">\n            {{ '' | getTotalCartQuantity | async }}\n          </span>\n          </a>\n        </li>\n        <ng-template #anonymousUser>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n          </li> \n        </ng-template>        \n        <li ngbDropdown class=\"nav-item dropdown\" *ngIf=\"appUser; else anonymousUser\">\n          <a ngbDropdownToggle class=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n            {{ appUser.name}}\n          </a>\n          <ul ngbDropdownMenu class=\"dropdown-menu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <li><a class=\"dropdown-item\" routerLink=\"/my-orders\">My orders</a></li>\n            <ng-container *ngIf= \"appUser.isAdmin\">\n              <li><a class=\"dropdown-item\" routerLink=\"/admin/manage-orders\">Manage orders</a></li>            \n              <li><a class=\"dropdown-item\" routerLink=\"/admin/products\">Manage products</a></li>\n            </ng-container>            \n            <li>\n              <a \n                class=\"dropdown-item\" \n                (click)=\"logout()\"                 \n                routerLink=\"/\">\n                Logout\n              </a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject} from '@angular/fire/database';\nimport * as firebase from 'firebase/app';\nimport { AppUser } from '../models/app-user';\nimport { AuthService } from './auth.service';\nimport 'rxjs/add/operator/switchMap';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/observable/of';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private db: AngularFireDatabase, private authService: AuthService) { \n\n  }\n\n  registerUser(user: firebase.User){\n    this.db.object('/users/'+ user.uid).update({\n      name: user.displayName,\n      email: user.email,\n    });\n  }\n\n  getUser(uid: any):AngularFireObject<AppUser>{\n    return this.db.object('/users/'+ uid);\n  }  \n\n  getAppUser$(){\n    return this.authService.user$\n    .switchMap(user => {\n      if(user){\n        return this.getUser(user!.uid).valueChanges();\n      }      \n      return Observable.of(null);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyBQezsDWxMdPHSQjtSBKPewaac9sWto8yw\",\n    authDomain: \"oshop-9f4e2.firebaseapp.com\",\n    projectId: \"oshop-9f4e2\",\n    storageBucket: \"oshop-9f4e2.appspot.com\",\n    messagingSenderId: \"614453814208\",\n    appId: \"1:614453814208:web:4a3a0db07055bff9185e25\",\n    measurementId: \"G-DS5KEZQ4YL\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { Product } from 'src/app/models/product';\r\nimport { ShoppingCartService } from 'src/app/shopping-cart.service';\r\n@Pipe({\r\n    name: 'deleteProduct',\r\n    pure: true,\r\n})\r\nexport class DeleteProduct implements PipeTransform {\r\n \r\n    constructor( private cartService: ShoppingCartService){\r\n\r\n    }\r\n\r\n    transform(value: any, ...args: any[]) {\r\n        this.deleteProduct(value);\r\n    }\r\n\r\n    deleteProduct(product: Product){\r\n        this.cartService.deleteProductInCart(product);\r\n    }   \r\n\r\n}","import { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { Product } from '../models/product';\nimport { AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n \n  constructor(private db: AngularFireDatabase) { }\n\n  create(product: Product){    \n    let key = this.db.list('/products/').push(product).key;\n    product.key = <string> key;\n    this.updateProduct(key, product);\n  }\n\n  getAll():AngularFireList<Product>{\n    return this.db.list('/products/');\n  }\n\n  getProduct(productId: any): AngularFireObject<Product>{\n    return this.db.object('/products/'+ productId );\n  }\n\n  updateProduct(productId: string | null, product: Product){\n    return this.db.object('/products/'+productId).update(product);\n  }\n\n  deleteProduct(productId: string | null) {\n    return this.db.object('/products/'+productId).remove();\n  }\n\n}\n","import { ShoppingCartService } from './../../shopping-cart.service';\nimport { Component, Input } from '@angular/core';\nimport { Product } from 'src/app/models/product';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent{\n\n  @Input('Product')product!: Product;\n  \n  constructor(public cartService: ShoppingCartService) {    \n  }\n\n}","<div class=\"card m-4\" style=\"width: 20rem\">\n  <img class=\"card-img-top\" [src]=\"product?.ImageUrl\" />\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ product?.Title }}</h5>\n    <p class=\"card-text\">{{ product?.Price | currency: \"INR\" }}</p>\n  </div>\n  <div class=\"card-footer\">    \n    <button\n      *ngIf= \" (product | getQuantity | async) === 0 ; else updateQuantity\"      \n      class=\"btn btn-primary btn-block\"\n      (click)=\"cartService.AddToCart(product,'+')\">\n      Add to cart\n    </button>\n    <ng-template #updateQuantity>\n      <product-quantity [Product]=\"product\">\n      </product-quantity>      \n    </ng-template>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-success',\n  templateUrl: './order-success.component.html',\n  styleUrls: ['./order-success.component.css']\n})\nexport class OrderSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>order-success works!</p>\n","import { PipeTransform, Pipe } from \"@angular/core\";\r\nimport { Product } from \"src/app/models/product\";\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport { ShoppingCartService } from \"src/app/shopping-cart.service\";\r\n\r\n@Pipe({\r\n    name: 'getQuantity',\r\n    pure:true,\r\n})\r\nexport class Quantity implements PipeTransform{\r\n\r\n    constructor(private cartService: ShoppingCartService){\r\n       \r\n    }\r\n\r\n    transform(value: any, ...args: any[]) {        \r\n        return this.getQuantity(value);\r\n    }\r\n\r\n    getQuantity(product: Product){\r\n        return this.cartService.getCartItem(product)?.valueChanges()\r\n        .map(cartItem => {\r\n            return <number>cartItem?.quantity || 0;\r\n        });\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, UrlTree } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/map';\nimport { UserService } from './users.service';\nimport { AppUser } from '../models/app-user';\nimport { Observable } from 'rxjs';\nimport { app } from 'firebase';\nimport * as firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate {\n\n  constructor(private userService: UserService, private authService: AuthService) { }\n\n  canActivate(){\n    return this.userService.getAppUser$().map( appUser => appUser!.isAdmin);\n  }\n}\n","<div class=\"sticky-top\">\n    <div class=\"list-group m-4\">            \n        <a class=\"list-group-item list-group-item-action\"\n            [class.active]=\"!cateGory\"\n            routerLink=\"/\">\n            All categories\n        </a>\n        <a *ngFor=\"let category of categories$ | async;\"\n            class=\"list-group-item list-group-item-action\"\n            [class.active]=\"cateGory === category.name\"\n            routerLink=\"/\"\n            [queryParams]=\"{ category: category.name}\">\n                {{ category.name }}                   \n        </a>                                                                                   \n    </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'product-filter',\n  templateUrl: './product-filter.component.html',\n  styleUrls: ['./product-filter.component.css']\n})\nexport class ProductFilterComponent implements OnInit {\n\n  categories$;\n  @Input('CateGory') cateGory!: any;\n  constructor(private categoryService: CategoryService) { \n    this.categories$ = this.categoryService.getAll().valueChanges();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Order Details</h1>\n<table class=\"table\">            \n    <thead>\n        <tr>\n            <td>#</td>\n            <td>Name</td>\n            <td>TotalPrice</td>\n            <td>View</td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let order of orders; index as i\">\n            <ng-container *ngIf=\"orders\">\n                <td>{{ i+ 1 }}</td>\n                <td>{{ order.shippingDetails.Name }}</td>\n                <td>{{ order.totalPrice }}</td>\n                <td>\n                    <a [routerLink]=\"['/check-out/', order.key]\">\n                        edit\n                    </a>\n                </td>\n            </ng-container>\n        </tr>\n    </tbody>\n</table>","import { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Order } from '../models/order.class';\nimport { OrderService } from '../services/order.service';\n\n@Component({\n  selector: 'app-manage-orders',\n  templateUrl: './manage-orders.component.html',\n  styleUrls: ['./manage-orders.component.css']\n})\nexport class ManageOrdersComponent implements OnInit, OnDestroy {\n\n  orders: Order[] = [];\n  subscription!: Subscription;\n\n  constructor(private orderService: OrderService) { }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit(){\n    this.subscription = this.orderService.getOrders()\n    .valueChanges().subscribe( orders =>{\n      this.orders = orders;\n    });\n  }\n\n}\n","import { ShoppingCartService } from 'src/app/shopping-cart.service';\nimport { AuthService } from './services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './services/users.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n\n  constructor(private userService: UserService, \n              private service: AuthService, \n              private router: Router){ }\n\n  ngOnInit(): void {\n    this.service.user$\n    .subscribe( user=>{``\n      if(!user) return;\n\n      this.userService.registerUser(user);      \n      let url :any = localStorage.getItem('returnUrl');\n\n      if(!url) return;\n\n      localStorage.removeItem('returnUrl');\n      this.router.navigateByUrl(url);\n    });\n  }\n}","<bs-navbar></bs-navbar>\r\n<div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/take';\nimport { Product } from 'src/app/models/product';\nimport { ProductService } from 'src/app/services/product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { category } from 'src/app/models/category';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit{\n\n  private productId! : string | null;\n  public categories$!:  Observable<category[]>;\n  public title : string = \"\";\n  public key: string | null = \"\";\n  public price: number = 0;\n  public imageUrl: string = \"\";\n  public category: string = \"\";\n\n\n  constructor(private categoryService: CategoryService, \n              private productService: ProductService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.categories$ = this.categoryService.getAll().valueChanges();           \n    this.productId = this.route.snapshot.paramMap.get('productId') || null;\n    if(this.productId){\n      this.productService.getProduct(this.productId).valueChanges()\n      .take(1)\n      .subscribe( product =>{\n        if(product){ \n          // this.product = product;     \n          this.title = product.Title;         \n          this.category = product.Category;\n          this.key = product.key;\n          this.price = product.Price;\n          this.imageUrl = product.ImageUrl;\n        }        \n      });\n    }\n  }\n\n  save(product: Product){\n    if(this.productId){\n      this.productService.updateProduct(this.productId, product);\n    }\n    else{\n      this.productService.create(product);\n    }\n    this.router.navigate(['/admin/products']);    \n  }\n\n  delete(){\n    if(!confirm(\"Are you sure you want to delete this product \")) return;\n\n    this.productService.deleteProduct(this.productId);\n    this.router.navigate(['/admin/products']);    \n  }\n\n}\n","<div class=\"row\">    \n    <div class=\"col-md-6\">\n        <form #f=\"ngForm\" (ngSubmit)=\"save(f.value)\">\n            <div class=\"form-group\">\n                <label for=\"Title\">Title</label>\n                <input \n                  required\n                  [(ngModel)]=\"title\" \n                  #Title=\"ngModel\" \n                  name=\"Title\" \n                  type=\"text\" \n                  id=\"title\" \n                  class=\"form-control\">\n                <div \n                    class=\"alert alert-danger\"\n                    *ngIf = \"Title?.touched && Title?.invalid \">\n                        Title is required\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"Price\">Price</label>\n                <div class=\"input-group\">\n                    <span class=\"input-group-text\">$</span>\n                    <input \n                      required\n                      [min]=\"0\"\n                      [(ngModel)]=\"price\" \n                      #Price=\"ngModel\" \n                      name=\"Price\" \n                      type=\"number\" \n                      id=\"Price\" \n                      class=\"form-control\">\n                    <span class=\"input-group-text\">.00</span>\n                </div>\n                <div \n                    class=\"alert alert-danger\"\n                    *ngIf=\"Price?.touched && Price?.invalid\">\n                    <div *ngIf=\"Price?.errors?.required\">Price is required</div>\n                    <div *ngIf=\"Price?.errors?.min\">Price must not be negative</div>\n                </div>                 \n            </div>\n            <div class=\"form-group\">\n                <label for=\"Category\">Category</label>\n                <select \n                    required\n                    [(ngModel)]=\"category\"\n                    #Category=\"ngModel\"                \n                    name=\"Category\"                                                                   \n                    id=\"Category\" \n                    class=\"form-control\">\n                    <option [ngValue]=\"null\"></option>\n                    <option *ngFor=\" let c of categories$ | async;\">\n                        {{ c.name }}\n                    </option>\n                </select>\n                <div \n                    class=\"alert alert-danger\" \n                    *ngIf=\"Category?.touched && Category?.invalid\">\n                    category is required\n                </div> \n            </div>\n            <div class=\"form-group\">\n                <label for=\"ImageUrl\">Image URL</label>\n                <input\n                  required \n                  url\n                  [(ngModel)]=\"imageUrl\"\n                  #Imageurl=\"ngModel\"                  \n                  name=\"ImageUrl\"                  \n                  type=\"text\" \n                  id=\"ImageUrl\" \n                  class=\"form-control\">\n                <div \n                  class=\"alert alert-danger\" \n                  *ngIf=\"Imageurl?.touched && Imageurl?.invalid\">\n                    <div *ngIf=\"Imageurl?.errors?.required\">Image url is required</div>\n                    <div *ngIf=\"Imageurl?.errors?.url\">Please enter a valid image url</div>\n                </div> \n            </div>\n            <button class=\"btn btn-primary\" type=\"submit\">Save</button>\n            <button class=\"btn btn-danger ml-3\" type=\"button\" (click)=\"delete()\">Delete</button>\n        </form>             \n    </div> \n    <div class=\"col-md-6\">\n        <div *ngIf=\"title\" class=\"card\" style=\"width: 18rem;\">\n            <img class=\"card-img-top\" [src]=\"imageUrl\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ title }}</h5>\n                <p *ngIf=\"price\" class=\"card-text\">{{  price | currency:'INR':true}}</p>\n                <p *ngIf=\"category\" class=\"btn btn-primary\">{{ category }}</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Product } from '../models/product';\nimport { ShoppingCartService } from '../shopping-cart.service';\n\n@Component({\n  selector: 'product-quantity',\n  templateUrl: './product-quantity.component.html',\n  styleUrls: ['./product-quantity.component.css']\n})\nexport class ProductQuantityComponent implements OnInit {\n\n  @Input('Product')product!: Product;\n\n  constructor(private cartService: ShoppingCartService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  addToCart(symbol: string){    \n    this.cartService.AddToCart(this.product, symbol);\n  }\n\n}\n","<div class=\"row no-gutters\">\n    <div class=\"col-2\" id=\"plus\">\n        <button class = \"btn btn-secondary btn-block\" \n        (click)=\"addToCart('-')\">-</button>\n    </div>\n    <div class=\"col text-center p-2 block\" id=\"Quan\">\n        {{ product | getQuantity | async }}\n    </div>\n    <div class=\"col-2\" id=\"minus\">\n        <button class=\"btn btn-secondary btn-block\" (click)=\"addToCart('+')\">+</button>\n    </div>\n</div>","import { GetTotalPrice } from './common/Pipes/getTotalPrice.pipe';\nimport { AdminAuthGuard as AdminAuthGuard } from './services/admin-auth-guard.service';\nimport { AuthService } from './services/auth.service';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule} from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CustomFormsModule } from 'ng2-validation';\n\nimport { AppComponent } from './app.component';\nimport { BsNavbarComponent } from './bs-navbar/bs-navbar.component';\nimport { environment } from 'src/environments/environment';\nimport { HomeComponent } from './home/home.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\nimport { CheckOutComponent } from './check-out/check-out.component';\nimport { OrderSuccessComponent } from './order-success/order-success.component';\nimport { AdminProductsComponent } from './admin/admin-products/admin-products.component';\nimport { AdminOrdersComponent } from './admin/admin-orders/admin-orders.component';\nimport { LoginComponent } from './login/login.component';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AuthGuard } from './auth-guard.service';\nimport { UserService } from './services/users.service';\nimport { ProductFormComponent } from './admin/product-form/product-form.component';\nimport { CategoryService } from './services/category.service';\nimport { FormsModule } from '@angular/forms';\nimport { ProductService } from './services/product.service';\nimport { DataTablesModule } from 'angular-datatables';\nimport { ProductFilterComponent } from './Product/product-filter/product-filter.component';\nimport { ProductCardComponent } from './Product/product-card/product-card.component';\nimport { ShoppingCartService } from './shopping-cart.service';\nimport { Quantity } from './common/Pipes/Quantity.pipe';\nimport { DeleteProduct } from './common/Pipes/DeleteProduct.pipe';\nimport { TotalCartQuantity } from './common/Pipes/TotalCartQuantity.pipe';\nimport { ProductQuantityComponent } from './product-quantity/product-quantity.component';\nimport { OrderService } from './services/order.service';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\nimport { ManageOrdersComponent } from './manage-orders/manage-orders.component';\nimport { NgbCollapseModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BsNavbarComponent,\n    HomeComponent,\n    ProductsComponent,\n    ShoppingCartComponent,\n    MyOrdersComponent,\n    CheckOutComponent,\n    OrderSuccessComponent,\n    AdminProductsComponent,\n    AdminOrdersComponent,\n    LoginComponent,\n    ProductFormComponent,\n    ProductFilterComponent,\n    ProductCardComponent,\n    Quantity,\n    DeleteProduct,\n    TotalCartQuantity,\n    ProductQuantityComponent,\n    GetTotalPrice,\n    OrderSummaryComponent,\n    ManageOrdersComponent,\n  ],\n  imports: [\n    BrowserModule,  \n    NgbModule,\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    CustomFormsModule,       \n    RouterModule.forRoot([\n      { \n        path: 'admin/products/new',\n        component: ProductFormComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },\n      { \n        path: 'admin/products/:productId',\n        component: ProductFormComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },\n      { \n        path: 'admin/manage-orders',\n        component: ManageOrdersComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },\n      { \n        path: '', \n        component: ProductsComponent\n      },\n      { \n        path: 'login', \n        component: LoginComponent \n      },\n      { \n        path: 'products', \n        component: ProductsComponent \n      },\n      { \n        path: 'my-orders', \n        component: MyOrdersComponent, \n        canActivate: [AuthGuard]\n      },\n      { \n        path: 'check-out/:orderId',\n        component: CheckOutComponent, \n        canActivate: [AuthGuard]\n      }, \n      { \n        path: 'check-out', \n        component: CheckOutComponent, \n        canActivate: [AuthGuard]\n      },      \n      { \n        path: 'order-success/:orderId', \n        component: OrderSuccessComponent, \n        canActivate: [AuthGuard]\n      },\n      { \n        path: 'shopping-cart', \n        component: ShoppingCartComponent \n      },      \n      { \n        path: 'admin/products', \n        component: AdminProductsComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },     \n    ]),\n    AngularFireModule.initializeApp(environment.firebase),\n    NgbModule,\n    DataTablesModule,\n    FormsModule,\n    NgbCollapseModule\n  ],\n  providers: [ AuthService,\n               AuthGuard,\n               UserService,\n               CategoryService,\n               AdminAuthGuard,\n               ProductService,\n               ShoppingCartService,\n               OrderService,\n             ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CartItem } from './models/CartItem.cart';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { Product } from './models/product';\nimport 'rxjs/add/operator/take';\nimport { Cart } from './models/Cart';\nimport { AngularFireList } from 'angularfire2/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  constructor(private db: AngularFireDatabase) {\n  }\n\n  private create(){\n    let cartId = this.db.list('/shoppingCarts/').push({key: '', dateCreated: new Date().getDate()}).key;\n    this.db.list('shoppingCarts/'+cartId).update('/', {key: cartId});    \n    return cartId;\n  }\n\n  getCartItems():AngularFireList<CartItem>{\n    return this.db.list('/shoppingCarts/'+this.getOrCreateCartId()+'/items/');\n  }\n\n  deleteProductInCart(product: Product){\n    let product$=this.db.object('/shoppingCarts/'+this.getOrCreateCartId()+'/items/'+(product.key as unknown as CartItem));\n    product$?.remove();\n  }\n\n  getCart():AngularFireObject<Cart>{\n    return this.db.object('/shoppingCarts/'+(this.getOrCreateCartId() as unknown as Cart));\n  }\n\n  getOrCreateCartId() {\n    let cartId = localStorage.getItem('cartId');\n\n    if(cartId) return cartId;\n    let key = <string>this.create();\n    localStorage.setItem('cartId', key);\n    return key;\n  }\n\n  AddToCart(product: Product, symbol: string){    \n    \n    let item$ = this.getCartItem(product);\n    item$?.valueChanges().take(1).subscribe( (cartItem) => {\n      item$.update( { product: product,\n      quantity: (symbol === '+')? ((cartItem?.quantity || 0 ) + 1):\n      ((cartItem?.quantity || 0) - 1)} );    \n    });\n\n  }\n\n  getCartItem(product: Product):AngularFireObject<CartItem>{ \n    return this.db.object('/shoppingCarts/'+this.getOrCreateCartId()+'/items/'+product.key);\n  }\n\n  deleteAll(){\n    this.db.list('/shoppingCarts/'+this.getOrCreateCartId()+'/items/').remove();\n  }\n\n  clearShoppingCart(){\n    this.db.object('/shoppingCarts/'+this.getOrCreateCartId()).remove();\n  }\n\n}","import { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\nimport { Injectable } from '@angular/core';\nimport { category } from '../models/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private db: AngularFireDatabase){ \n  }\n \n  getAll():AngularFireList<category>{    \n    return this.db.list('/categories');\n  }\n\n}\n","import { PipeTransform, Pipe } from \"@angular/core\";\r\nimport { AngularFireDatabase } from \"angularfire2/database\";\r\nimport 'rxjs/add/operator/map';\r\nimport { CartItem } from \"src/app/models/CartItem.cart\";\r\nimport { Product } from \"src/app/models/product\";\r\nimport { ShoppingCartService } from \"src/app/shopping-cart.service\";\r\nimport { forEachChild } from \"typescript\";\r\n\r\n@Pipe({\r\n    name: 'getTotalCartQuantity',\r\n    pure:true,\r\n})\r\nexport class TotalCartQuantity implements PipeTransform{\r\n\r\n    totalQuantity = 0;\r\n    constructor(private cartService: ShoppingCartService,\r\n                private db: AngularFireDatabase){\r\n       \r\n    }\r\n\r\n    transform(value: any, ...args: any[]) {        \r\n        return this.getTotalCartQuantity(value);\r\n    }\r\n\r\n    getTotalCartQuantity(product: string){     \r\n        return this.cartService.getCartItems().valueChanges()\r\n        .map( cartitems =>{\r\n            this.totalQuantity = 0;\r\n            for (let cartItem of cartitems) this.totalQuantity += cartItem?.quantity;\r\n            return this.totalQuantity;\r\n        })\r\n    }\r\n\r\n}","<h1 class=\"pt-5\">Shopping Cart</h1>\n<p>You have {{ ''| getTotalCartQuantity | async }} item(s) in your shopping cart</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Product</th>\n      <th>Name</th>\n      <th>Quantity</th>\n      <th>Price</th>\n    </tr>\n  </thead>\n  <tbody>\n        <tr *ngFor=\"let cartItem of cartItems; index as i\">\n            <ng-container *ngIf=\"(cartItem.product | getQuantity | async) != 0; else wait\">\n              <td class=\"pt-4\"> \n                {{ i+1 }} \n              </td>\n              <td>        \n                <img [src]=\"cartItem.product.ImageUrl\" id=\"image\">        \n              </td>\n              <td class=\"pt-4\">\n                <p id=\"productName\">{{ cartItem.product.Title }}</p>\n              </td>\n              <td class=\"pt-4\">\n                <product-quantity [Product]=\"cartItem.product\">\n\n                </product-quantity>                                  \n              </td>\n              <td class=\"pt-4\">\n                <p>{{ (cartItem.product.Price * cartItem.quantity) | currency:'INR' }}</p>\n              </td>\n            </ng-container>            \n            <ng-template #wait>{{ cartItem.product | deleteProduct }}</ng-template>\n        </tr>   \n        <tr *ngIf =\"(cartItems | getTotalPrice) != 0\">\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><p id=\"productName\">Total Price : </p></td>\n            <td><p id=\"productName\" class=\"pl-4\"> {{ (cartItems | getTotalPrice) | currency: 'INR'  }} </p></td>\n        </tr>             \n</table>\n\n<button *ngIf =\"(cartItems | getTotalPrice) != 0\"\n        class=\"btn btn-danger mb-5\" \n        (click)=\"deleteAll()\">\n            Clear all items\n</button>\n<a\n  *ngIf=\"(cartItems | getTotalPrice) != 0\"\n  class=\"btn btn-primary ml-3 mb-5\"\n  routerLink=\"/check-out\">\n    Check out\n</a>","import { ShoppingCartService } from './../shopping-cart.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CartItem } from '../models/CartItem.cart';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n\n  cartItems: CartItem[] = [];\n  subscription!: Subscription;\n\n  constructor(private cartService: ShoppingCartService) {\n           \n  }\n\n  ngOnInit(){\n    \n    this.subscription = this.cartService.getCartItems()?.valueChanges()\n    .subscribe( cartitems =>{\n      if(cartitems){\n        this.cartItems = cartitems;\n      }     \n    });\n\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();    \n  }\n\n  deleteAll(){\n    if(!confirm('Are you sure you want to delete all items in your cart ')) return\n    this.cartService.deleteAll();\n  }\n\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">{{ appUser?.name || 'username'}}</h5>\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Order summary</h5>\n        <p class=\"card-text\" *ngIf=\"isMyOrder && !isManageOrder\">you have {{ '' | getTotalCartQuantity | async }} item(s) in your shopping cart</p>\n        <table class='table'>\n            <tbody>\n                <tr *ngFor=\"let cartItem of cartItems\">\n                    <td>{{ cartItem?.quantity }} x {{ cartItem?.product?.Title }}</td>\n                    <td>{{ cartItem?.product?.Price | currency: 'INR' }}</td>\n                </tr>\n                <tr>\n                    <td class=\"total\">Total</td>\n                    <td class=\"total\">{{ (cartItems | getTotalPrice) | currency: 'INR' }}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { AppUser } from '../models/app-user';\nimport { CartItem } from '../models/CartItem.cart';\n\n@Component({\n  selector: 'order-summary',\n  templateUrl: './order-summary.component.html',\n  styleUrls: ['./order-summary.component.css']\n})\nexport class OrderSummaryComponent implements OnInit {\n\n  @Input('AppUSer')appUser!: AppUser | null;\n  @Input('CartITems')cartItems: CartItem[] = [];  \n  @Input('IsMyOrder')isMyOrder: boolean = true;\n  @Input('IsManageOrder')isManageOrder: boolean = false;\n\n  constructor() {  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ShippingDetails } from './../models/shippingDetails.order';\nimport { ShoppingCartService } from 'src/app/shopping-cart.service';\nimport { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from 'angularfire2/database';\nimport { Order } from '../models/order.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n \n  constructor(private db: AngularFireDatabase,\n              private cartService: ShoppingCartService) { }\n\n  placeOrder(order: any){\n    let result = this.db.list('/orders/').push(order);\n    order.key = <string>result.key;\n    this.update(order);\n    this.cartService.clearShoppingCart();\n    return result;\n  }\n\n  update(order: Order){\n    this.db.object('/orders/'+order.key).update(order);\n  }\n\n  deleteOrder(orderId: string) {\n    this.db.object('/orders/'+orderId).remove();\n  }\n\n  getOrders():AngularFireList<Order>{\n    return this.db.list('/orders/');\n  }\n\n  getOrder(orderId: string):AngularFireObject<Order>{\n    return this.db.object('/orders/'+orderId);\n  }\n\n  updateShipppingDetails(orderId: string, shippingDetails: ShippingDetails){\n    this.db.object('/orders/'+orderId+'/shippingDetails/').update(shippingDetails);\n  }\n}\n","import { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/observable/throw';\nimport { ActivatedRoute } from '@angular/router';\n// import { UsersService } from './users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user$: Observable< firebase.User | null>;\n\n  constructor(private fAuth: AngularFireAuth, private route: ActivatedRoute) {\n    this.user$ = this.fAuth?.authState;\n  }\n\n  login(){\n    let returnUrl:any = this.route.snapshot.queryParamMap.get('returnUrl') || '/';\n    localStorage.setItem('returnUrl', returnUrl);\n    this.fAuth.auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider());\n  }\n\n  logout(){    \n    this.fAuth.auth.signOut();\n  }\n\n}\n","<a class=\"btn btn-primary\" routerLink=\"/admin/products/new\">New product</a>\n<p>\n  <input \n    placeholder=\"Search...\" \n    class=\"input-group mt-4\" \n    #search\n    (keyup)=\"filter(search.value)\">\n</p>\n\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>Title</th>\n      <th>Price</th>\n      <th>Edit</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let product of filteredProducts; index as i\">\n      <td>{{ i+1 }}</td>\n      <td>{{ product.Title }}</td>\n      <td>{{ product.Price }}</td>\n      <td><a [routerLink]=\"['/admin/products/', product.key]\">edit</a></td>\n    </tr>\n  </tbody>\n</table>","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { Product } from 'src/app/models/product';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-admin-products',\n  templateUrl: './admin-products.component.html',\n  styleUrls: ['./admin-products.component.css']\n})\nexport class AdminProductsComponent implements OnInit,OnDestroy{\n\n  public products!: Product[];\n  public filteredProducts!: Product[];\n  public subscription!: Subscription;  \n\n  constructor(private productService: ProductService ) {\n           \n  }\n\n  ngOnInit(): void {   \n    this.subscription = this.productService.getAll().valueChanges()\n    .subscribe(products => {\n      this.filteredProducts = this.products = products;\n    });  \n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  filter(query: string){\n    this.filteredProducts = (query)?\n      this.products.filter(p => p.Title.toLowerCase().includes(query.toLowerCase())): \n      this.products;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { CartItem } from 'src/app/models/CartItem.cart';\r\n\r\n@Pipe({\r\n    name: 'getTotalPrice',\r\n    pure: true,\r\n})\r\nexport class GetTotalPrice implements PipeTransform{\r\n  \r\n    totalPrice!: number;    \r\n        \r\n    transform(value: CartItem[], ...args: any[]) {\r\n        return this.getTotalPrice(value);\r\n    }\r\n\r\n    getTotalPrice(cartItems: CartItem[]){\r\n        this.totalPrice = 0;\r\n        for (let cartItem of cartItems){\r\n            this.totalPrice += (cartItem.product.Price * cartItem.quantity);\r\n        }\r\n        return this.totalPrice;\r\n    }\r\n}","import { ShippingDetails } from './../models/shippingDetails.order';\nimport { GetTotalPrice } from './../common/Pipes/getTotalPrice.pipe';\nimport { ShoppingCartService } from 'src/app/shopping-cart.service';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AppUser } from '../models/app-user';\nimport { UserService } from '../services/users.service';\nimport { CartItem } from '../models/CartItem.cart';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/take';\nimport { OrderService } from '../services/order.service';\nimport { AuthService } from '../services/auth.service';\nimport { Order } from '../models/order.class';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-check-out',\n  templateUrl: './check-out.component.html',\n  styleUrls: ['./check-out.component.css'],\n})\nexport class CheckOutComponent implements OnInit, OnDestroy {\n\n  appUser!: AppUser | null;\n  subscription!: Subscription;\n  cartItems: CartItem[] = [];\n  price!: GetTotalPrice;\n  userId: string = '';\n  manageOrder!: Order;\n  isManageOrder: boolean = false;\n\n  NAME: string = '';\n  ADDRESS1: string = '';\n  ADDRESS2: string = '';\n  CITY: string='';\n  orderId: string | null = '';\n \n  constructor(private userService : UserService,\n              private cartService : ShoppingCartService,\n              private orderService: OrderService,\n              private authService: AuthService,\n              private router: Router,\n              private route: ActivatedRoute) {\n\n                this.price = new GetTotalPrice();\n                this.orderId = <string>this.route.snapshot.paramMap?.get('orderId') || null;\n\n                if(this.orderId){\n                  this.orderService.getOrder(this.orderId)\n                  .valueChanges().subscribe( order => {\n                    if(order){\n                      this.isManageOrder = true;\n                      this.manageOrder = <Order>order;                      \n                      this.InitializeShipDet();\n                    }                   \n                  });\n                }                                                                   \n  }\n\n  update(shippingDetails: ShippingDetails){\n    this.orderService.updateShipppingDetails(<string>this.orderId, shippingDetails);\n    this.router.navigate(['/admin/manage-orders/']);\n  }\n\n  delete(){\n    if(!confirm('Are you sure you want to delete this order')) return;\n    this.orderService.deleteOrder(<string>this.orderId);\n    this.router.navigate(['/admin/manage-orders/']);\n  }\n\n  InitializeShipDet() {\n    this.NAME = this.manageOrder.shippingDetails.Name;\n    console.log(this.NAME);\n    this.ADDRESS1=this.manageOrder.shippingDetails?.Address1;\n    this.ADDRESS2=this.manageOrder.shippingDetails?.Address2;\n    this.CITY=this.manageOrder.shippingDetails?.City;\n    this.cartItems = this.manageOrder.items;\n  }\n\n  ngOnInit(): void {\n    \n    this.subscription = this.cartService.getCartItems()?.valueChanges()\n    .switchMap( cartitems =>{\n      if(cartitems && !(this.isManageOrder)){        \n        this.cartItems = cartitems;\n      }\n      return this.authService.user$;\n    })\n    .switchMap( user => {\n      this.userId = <string>user?.uid;\n      return this.userService.getAppUser$();\n    })\n    .subscribe( appUser =>{\n      this.appUser = appUser;\n    });\n   \n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  placeOrder(shippingDetails : any){  \n    if(shippingDetails.control.status === \"INVALID\"){\n      alert('Please enter all the details!'); \n      return;\n    } \n\n    let order = new Order(\n      this.userId, \n      shippingDetails.value, \n      this.cartItems,\n      '₹'+(this.price.getTotalPrice(this.cartItems)) );     \n\n    let result = this.orderService.placeOrder(order);\n    this.router.navigate(['/order-success/',result.key]);\n\n  }\n\n}\n","<div class = \"row\">\n    <div class=\"col-md-6\">\n        <h2 class=\"mt-5\">Shipping Details</h2>\n        <form #Form=\"ngForm\" (ngSubmit)=\"placeOrder(Form)\" id=\"form\">\n            <div class=\"form-group\">\n                <label for=\"Name\">Name</label>\n                <input \n                    id=\"Name\"\n                    class=\"form-control\"\n                    type=\"text\" \n                    required\n                    name=\"Name\"\n                    [(ngModel)]=\"NAME\"\n                    placeholder=\"Enter your full name\"                   \n                    #Name=\"ngModel\">\n                <div class=\"alert alert-danger\"\n                     *ngIf=\"Name.touched && Name.invalid\">\n                     Name is required\n                </div>\n            </div>   \n            <div class=\"form-group\">\n                <label for=\"Address\">Address</label>\n                <input \n                    id=\"Address\"\n                    class=\"form-control\"\n                    type=\"text\" \n                    required\n                    name=\"Address1\"\n                    [(ngModel)]=\"ADDRESS1\"      \n                    placeholder=\"Address line 1\"              \n                    #Address1=\"ngModel\">\n                <div class=\"alert alert-danger\"\n                     *ngIf=\"Address1.touched && Address1.invalid\">\n                     Address line 1 is required                     \n                </div>\n                <input \n                    id=\"Address\"\n                    class=\"form-control mt-4\"\n                    type=\"text\" \n                    required\n                    name=\"Address2\"\n                    [(ngModel)]=\"ADDRESS2\" \n                    placeholder=\"Address line 2\"                 \n                    #Address2=\"ngModel\">              \n                <div class=\"alert alert-danger\"\n                     *ngIf=\"Name.touched && Name.invalid\">\n                     Address line 2 is required                 \n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"City\">City</label>\n                <input \n                    id=\"City\"\n                    class=\"form-control\"\n                    type=\"text\" \n                    required\n                    name=\"City\"\n                    [(ngModel)]=\"CITY\"   \n                    placeholder=\"City\"                 \n                    #City=\"ngModel\">\n                <div class=\"alert alert-danger\"\n                     *ngIf=\"City.touched && City.invalid\">\n                    City is required                     \n                </div>                \n            </div>   \n            <button *ngIf=\"!isManageOrder\" type=\"submit\" class=\"btn btn-primary\">\n                Place order\n            </button>\n            <a *ngIf=\"isManageOrder\"                 \n               type=\"button\" \n               class=\"btn btn-primary mr-4\" \n               (click)=\"update(Form.value)\">\n                Update\n            </a>\n            <a *ngIf=\"isManageOrder\"              \n               type=\"button\" \n               class=\"btn btn-danger\" \n               (click)=\"delete()\">\n                Delete\n            </a>\n        </form>\n    </div>\n    <div class=\"col-md-6\">\n        <order-summary [AppUSer]=\"appUser\" [CartITems]=\"cartItems\" [IsManageOrder]=\"isManageOrder\">\n\n        </order-summary>\n    </div>\n</div>","<div class=\"row\">\n    <div class=\"col-md-6\">   \n        <h2>Order details</h2>     \n        <table class=\"table\">            \n            <thead>\n                <tr>\n                    <td>#</td>\n                    <td>Name</td>\n                    <td>TotalPrice</td>\n                    <td>View</td>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let order of orders; index as i\">\n                    <ng-container *ngIf=\"orders\">\n                        <td>{{ i+ 1 }}</td>\n                        <td>{{ order.shippingDetails.Name }}</td>\n                        <td>{{ order.totalPrice }}</td>\n                        <td>\n                            <button class=\"badge badge-warning badge-pill\" \n                                    (click)=\"ClickedOrder(order)\">view\n                            </button>\n                        </td>\n                    </ng-container>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"col-md-6\" *ngIf=\"closeView\">\n        <order-summary [AppUSer]='appUser' [CartITems]=\"clickedOrder.items\" [IsMyOrder]=\"false\">\n\n        </order-summary>\n        <div class=\"card\">\n            <h5 class=\"card-header\">Shipping address</h5>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ clickedOrder.shippingDetails.Name }}</h5>\n                <p class=\"card-text\">{{ clickedOrder.shippingDetails.Address1 }}</p>\n                <p class=\"cart-text\">{{ clickedOrder.shippingDetails.Address2 }}</p>\n                <p class=\"cart-text\">{{ clickedOrder.shippingDetails.City }}</p>\n                <button class=\"btn btn-danger\" (click)=\"closeView = false\">close</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AppUser } from '../models/app-user';\nimport { CartItem } from '../models/CartItem.cart';\nimport { Order } from '../models/order.class';\nimport { AuthService } from '../services/auth.service';\nimport { OrderService } from '../services/order.service';\nimport { UserService } from '../services/users.service';\nimport { ShoppingCartService } from '../shopping-cart.service';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit, OnDestroy {\n\n  appUser!: AppUser | null;\n  subscription!: Subscription;\n  cartItems: CartItem[] = [];\n  orders: Order[] = [];\n  userId: string = '';\n  closeView: boolean = false;\n  clickedOrder!: Order;\n\n  constructor(private cartService: ShoppingCartService,\n    private userService: UserService,\n    private orderService: OrderService,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.subscription = this.cartService.getCartItems()?.valueChanges()\n      .switchMap(cartitems => {\n        if (cartitems) {\n          this.cartItems = cartitems;\n        }\n        return this.authService.user$;\n      })\n      .switchMap(user => {\n        this.userId = <string>user?.uid;\n        return this.orderService.getOrders().valueChanges();\n      })\n      .switchMap((orders: Order[]) => {\n        for (let order of orders) {\n          if (order?.userId === this.userId) this.orders.push(order);\n        }\n        return this.userService.getAppUser$();\n      })\n      .subscribe(appUser => {\n        this.appUser = appUser;\n      });\n\n  }\n  \n  ClickedOrder(order: Order) {\n    this.clickedOrder = order;\n    this.closeView = true;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n","import { ShippingDetails } from \"./shippingDetails.order\";\r\n\r\nexport class Order{        \r\n    public datePlaced: string = ''; \r\n    public key : string = '';           \r\n\r\n    constructor( public userId: string, \r\n                 public shippingDetails: ShippingDetails, \r\n                 public items: any,\r\n                 public totalPrice: any){\r\n        \r\n        this.datePlaced = new Date().getDate().toString();\r\n    }\r\n}","import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent {\n\n  constructor(private service: AuthService) {     \n  }\n\n  login(){\n    this.service.login();\n  }\n\n}\n","<button class=\"btn btn-primary\" (click)=\"login()\">Login with google</button>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { ShoppingCartService } from './../shopping-cart.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport 'rxjs/add/operator/switchMap';\nimport { Cart } from '../models/Cart';\nimport { Product } from '../models/product';\nimport { ProductService } from '../services/product.service';\nimport { CartItem } from '../models/CartItem.cart';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit{\n\n  products: Product[] = [];\n  filteredProducts: Product[] = []; \n  cateGory!: string | null;\n\n  constructor(private productService: ProductService,               \n              private route: ActivatedRoute,\n              private cartService: ShoppingCartService) { \n\n    this.productService.getAll().valueChanges()\n    .switchMap( products => {      \n      this.products = this.filteredProducts = products;\n      return this.route.queryParamMap;\n    })\n    .subscribe( params =>{\n      this.cateGory = params.get('category');    \n      this.filteredProducts = this.cateGory? \n        this.products.filter( p => p.Category === this.cateGory):\n        this.products;\n    });    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"products\">\n    <div class=\"row\">\n        <div class=\"col-md-3\">        \n           <product-filter [CateGory]=\"cateGory\"></product-filter>\n        </div>\n        <div class=\"col-md-9\">\n            <div class=\"row\">\n                <ng-container *ngFor=\"let product of filteredProducts; let i = index\">\n                    <div class=\"col\">\n                       <product-card [Product]=\"product\"></product-card>\n                    </div>\n                    <div *ngIf=\" (i + 1) % 2 === 0 \" class=\"w-100\"></div>\n                </ng-container>   \n            </div>           \n        </div>\n    </div>\n</div>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}